/* Estructura para definir un pixel. */
struct {
	int red;
	int green;
	int blue;
} pixel1, pixel2, pixel3;

/* Imagen de dos pixeles. */
int colores[3][3];
double ruido;

/* Función que obtiene el promedio de dos enteros.
 * Recibe color1 y color2, que obtendremos el promedio.
 * Regresa un double que será el promedio.
 */
func double promedio_colores(int color1, int color2)
{
	int suma;
	suma = color1() + color2();
	return suma / 2;
}

/*
 * Regresa la representación entero de un double.
 */
func int redondear_ruido()
{
	return ruido;
}

/* Obtiene la división de ambos argumentos*/
func int normalizar(double promedio, int color)
{
	if (promedio() != 0)
		return color() / promedio();
	return 0;
}

/* Función principal del programa. */
func int main()
{
	int i, j;
	double promedio;

	// Colores de pixel 1.
	pixel1.red   = 100;
	pixel1.green = 200;
	pixel1.blue  = 50;

	// Colores de pixel 2.
	pixel2.red = 30;
	pixel2.green = 234;
	pixel2.blue = 80;
	

	// Colores de pixel 3.
	pixel3.red   = promedio_colores(pixel1.red, pixel2.red);
	pixel3.green = promedio_colores(pixel1.green, pixel2.green);
	pixel3.blue  = promedio_colores(pixel1.blue, pixel2.blue);

	ruido = 0.6;
	if (ruido() <= 0.5)
		ruido = redondear_ruido();

	colores[0][0] = pixel1.red + ruido();
	colores[0][1] = pixel1.green + ruido();
	colores[0][2] = pixel1.blue + ruido();
	colores[1][0] = pixel2.red + ruido();
	colores[1][1] = pixel2.green + ruido();
	colores[1][2] = pixel2.blue + ruido();
	colores[2][0] = pixel3.red + ruido();
	colores[2][1] = pixel3.green + ruido();
	colores[2][2] = pixel3.blue + ruido();

	for (i() = 0; ; i() < 3; i = i() + 1)
	{
		for (i() = 0; i() < 3; i = i() + 1)
		{
			colores[i][j] = normalizar(redondear_ruido(), colores[i][j]);
		}
	}
}
